{
  "dfa": "DFA là viết tắt của Deterministic Finite Automaton, là một mô hình trong lý thuyết ngôn ngữ và tự động hóa.",
  "nfa": "NFA là viết tắt của Nondeterministic Finite Automaton, là một mô hình khác trong lý thuyết ngôn ngữ và tự động hóa.",
  "sets": "Một tập hợp là một bộ các phần tử. Các phần tử tạo nên một tập hợp có thể là bất kỳ loại đối tượng toán học nào: số, ký hiệu, điểm trong không gian, đường thẳng, các hình dạng hình học khác, các biến hoặc thậm chí các tập hợp khác. ",
  "element": "Phần tử là các đối tượng hoặc các thành phần cụ thể mà tập hợp đó chứa. Nói cách khác, phần tử là các thành phần riêng lẻ mà tạo nên tập hợp. Một phần tử có thể thuộc hoặc không thuộc vào tập hợp.",
  "pheptoan": "Các toán tử cơ bản trên tập hợp bao gồm các toán tử một ngôi (unary) và hai ngôi (binary) như sau: phép phần bù (complement), phép hợp (union), phép giao (intersection), phép trừ (difference), tích Đecac",
  "quanhe": "Một quan hệ hai ngôi (hay còn gọi là quan hệ nhị phân) trên hai tập A và B là một tập các cặp được sắp (a, b), chứa các phần tử a thuộc A và các phần tử b thuộc B. Đó là một tập con của tích Descartes A × B. Nó mã hóa thông tin quan hệ: một phần tử a có liên quan với một phần tử b khi và chỉ khi cặp (a, b) thuộc về một tập hợp.",
  "tinhchat_quanhe": "Ta gọi một quan hệ R trên tập S là :\n + Phản xạ (reflexive ) : nếu aRa là đúng ∀a ∈ S \n + Đối xứng (symmetric ) : nếu aRb thì bRa \n + Bắc cầu (transitive) : nếu aRb và bRc thì aRc",
  "quanhe_tuongduong": "Một quan hệ R trên tập S có đủ các tính chất phản xạ, đối xứng và bắt cầu được gọi là quan hệ tương đương.",
  "quanhe_baodong": "Giả sử P là tập hợp một số tính chất của các quan hệ, bao đóng P (P - closure) của một quna hệ R trên tập S là quan hệ nhỏ nhất có chứa tất cả các cặp của R thỏa mãn các tính chất trong P.",
  "baodong_batcau": "Bao đóng bắt cầu R+ của R được xác định như sau:\n i) Nếu (a,b) thuộc R thì (a,b) thuộc R+.\n ii) Nếu (a,b) thuộc R+ và (b,c) cũng thuộc R+ thì (a,c) thuộc R+.\n iii) Không còn thêm trong R+.",
  "baodong_phanxa": "Bao đóng phản xạ và bắc cầu R* của R được xác định như sau:\n R* = R+ ∪ {(a,a) | a ∈ S}",
  "quynap": "Giả sử ta cần chứng minh một mệnh đề P(n) với n là một số gnuyeen không âm. Nguyên lý quy nạp toán học cho P(n) được chứng minh theo 2 bước sau:\n i) P(0), và \n ii) P(n-1) kéo theo P(n), ∀n ≥ 1\n Bước (i) được gọi là cơ sở quy nạp, bước (ii) được gọi là bước quy nạp với P(n-1) là giả thiết quy nạp.",
  "dothi": "Một đồ thị, ký hiệu G = (V,E), bao gồm một tập hữu hạn các đỉnh V (còn gọi là nút) và một tập các cạnh E nối giữa 2 nút.",
  "duongdi": "Một đường đi (path) trên một đồ thị là dãy các đỉnh v1,v2,...,vk, k ≥ 1, sao cho trong đó có một cạnh (vi,vi+1) cho mỗi i, 1 ≤ i ≤ k",
  "dodaiduongdi": "Độ dài đường đi là k-1. Nếu v1= vk thì đường đi là một chu trình.",
  "dothicohuong": "Một đồ thị có hướng cũng là dnajg đồ thị được xác định bởi G = (V,E), trong đó V là tập các đỉnh, còn E là tập các đỉnh có thứ tự gọi là các cung ( hay các đường nối có hướng giữa 2 đỉnh). Ký hiệu một cung từ v đến w có dạng v → w",
  "cay": "Cây (cây định hướng có thứ tự) là một đồ thị có hướng với các tính chất sau:\n i) Có một nút gọi là nút gốc.\n ii) Mỗi nút còn lại đều được dẫn ra từ một nút cha ở trên nó:\n - Các nút có dẫn ra nút con sau nó được gọi là nút trung gian hay nút trong.\n - Các nút không dẫn ra nút con gọi là nút lá.\n iii) Thứ tự duyệt trên cây là từ trái sang phải.",
  "ngonngu": "Ngôn ngữ, một cách không chính xác là một hệ thống thích hợp cho việc biểu thị các ý nghĩ, các sự kiện hay các khái niệm, bao gồm một tập các ký hiệu và các quy tắc để vận dụng chúng.",
  "bochucai": "Một bộ chữ cái (bộ ký hiệu ) là một tập hợp không rỗng , ký hiệu là Σ. Các phần tử của một bộ chữ cái Σ được gọi là các ký hiệu (symbols).",
  "kyhieu": "Một ký hiệu (symbols) là một thực thể trừu tượng mà ta sẽ không định nghĩa được một cách hình thức.",
  "chuoi": "Một chuỗi (string) hay từ (word) trên bộ chữ cái Σ là một dãy hữu hạn gồm một số lớn hơn hay bằng không các ký hiệu của Σ, trong đó một ký hiệu có thể xuất hiện vài lần.",
  "dodai": "Độ dài của một chuỗi w, ký hiệu là |w| là số các ký hiệu tạo thành chuỗi w.",
  "chuoi_rong": "Chuỗi rỗng (ký hiệu là ξ) là chuối không có ký hiệu nào, vì vậy |ξ |=0",
  "tiento_hauto": "Tiền tố của một chuỗi là một chuỗi con bất kỳ nằm ở đầu chuỗi và hậu của một chuỗi là chuỗi con nằm ở cuối chuỗi.",
  "tiento_hauto_thucsu": "Tiền tố và hậu tố của một chuỗi khác hơn chính chuỗi đó ta gọi là tiền tố va fhajau tố thực sự.",
  "chuoinoiket": "Chuỗi nối kết (ghép ) từ hai chuỗi con là một chuỗi tạo được bằng cách viết chuỗi thứ nhất sau đó là chuỗi thứ hai (không có khoảng trống ở giữa)",
  "chuoidao_nguoc": "Chuỗi đảo ngược của chuỗi w, ký hiệu là wr là chuỗi được viết theo thứ tự ngược lại, nghĩa là nếu w= a1,a2,...,an thì wr= an,an-1,...,a1. Hiển nhiên ξr = ξ ",
  "ngon_ngu_hinhthuc": "Một ngôn ngữ (hình thức) L là một tập hợp csac chuỗi của các ký hiệu từ một bộ chữ cái Σ nào đó",
  "pheptoan_ngonngu": "Từ các ngôn ngữ có trước, ta có thể thu được các ngôn ngữ mới nhờ áp dụng các phép toán trên ngôn ngữ. Trước hết, vì ngôn ngữ là một tập hợp, nên mọi phép toán trên tập hợp như : hợp (union),giao (intersection) và hiệu (difference)... đều có thể áp dụng lên các ngôn ngữ. Ngoài ra còn có các phép toán khác như : phép phần bù (complement), phép kết nối ( concatenation) , phép bao đóng (closure).",
  "phanbu": "Phép phần bù (complement) của một ngôn ngữ L trên bộ chữ cái Σ đươc định nghĩa như sau: L = Σ* - L",
  "phepnoiket": "Phép nối kết (concatenation) của hai ngôn ngữ Li trên bộ chữ cái Σi và L2 trên  bộ chữ cái Σ2 được định nghĩa bởi: L1L2 = { w1w2 | w1 ∈ L1 và w2 ∈ L2} trên bộ chữ cái Σ1 ∪ Σ2",
  "phepbaodong": "Phép bao đóng (closure) : trong nhiều trường hợp, người ta muốn thành lập một ngôn ngữ bằng cách nối kết các chuỗi ( với số lượng bất kỳ) lấy trong một ngôn ngữ L cho trước, các phép toán đó như sau:\n - Bao đóng (Kleene) của ngôn  ngữ L, k hiệu L* được định nghĩa là hợp của mọi tập tích trên L.\n - Bao đóng dương (positive) của ngôn gnuwx L, ký tự L+ được định nghĩa là hợp của mọi tích dương trên L.",
  "vanpham": "Văn phạm (grammar) là một tập hợp các quy tắc và cấu trúc ngữ pháp mà ngôn ngữ được xây dựng dựa trên đó. Nó xác định cách các thành phần ngôn ngữ được kết hợp và xếp chồng lên nhau để tạo thành các câu hoặc văn bản hợp lệ.",
  "vanpham_cautruc": "Văn phạm cấu trúc G là một hệ thống gồm bốn thành phần xác định như sau G(V,T,P,S), trong đó: \n - V : tập hợp các biến hay các ký hiệu chưa kết thúc.\n - T : tập hợp các ký hiệu kết thúc.\n - P : tập hữu hạn các quy tắc ngữ pháp được gọi là các luất sinh . mỗi luật sinh được biểu diễn dưới dạng a -> b với a,b là các chuỗi (V ∈ T)*.\n - S : ký tự chưa kết thúc dùng làm ký hiệu bắt đầu.",
  "danxuat": "Từ văn phạm, để sinh ra được các câu (từ) , ta định nghĩa khái niệm dẫn xuất như sau :\n Nếu a ➝ B là một luật sinh thì γaδ ⟹ γbδ gọi là một dẫn xuất trực tiếp, có nghĩa là áp dụng luật sinh a ➝ b vào chuỗi γaδ để sinh ra chuỗi γbδ."
}